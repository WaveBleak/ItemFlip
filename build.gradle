plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dk.wavebleak'
version = '1.0'

compileJava {
    options.encoding = 'UTF-8'
}



repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "codemc-snapshots"
        url = "https://repo.codemc.io/repository/maven-snapshots/"
    }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven{
        url = "https://jitpack.io"
    }
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    implementation "hm.zelha:particlesfx:1.8.8"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly "org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT"
    implementation 'dk.wavebleak:WavesPluginLib:1.0'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}


def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
